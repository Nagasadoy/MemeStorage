# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app.state: '%env(DUMMY_VAR)%'
    app.wrap: '%env(WRAP)%'
    database_type: '%env(DATABASE_TYPE)%'

services:

    _instanceof:
        App\Service\Mail\MailerInterface:
            tags: ['app.custom_mailer']

    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Service\TransformTextInterface: '@App\Service\StdService'
    App\Service\TransformTextInterface $toLowerTransformer: '@App\Service\ToLowerService'
    App\Service\TransformTextInterface $toUpperTransformer: '@App\Service\ToUpperService'

#    App\Service\MyService:
#        arguments:
#            $state: '%app.state%'

#    App\Service\WrapperClass:
#        arguments:
#            $wrapSymbol: '*'

#    App\Service\Mail\FirstMailer:
#        tags: ['app.custom_mailer']
#
#    App\Service\Mail\SecondMailer:
#        tags: ['app.custom_mailer']

    App\Service\Mail\MailTransport:
        arguments:
            - !tagged_iterator app.custom_mailer

    App\Service\Complex:
        configurator: ['@App\Configure\ComplexConfigurator', 'configure']

    App\Service\MyService:
        tags: ['app.my_service']
        calls:
            - setWrapper: ['@App\Service\WrapperClass']

    App\Service\Tower:
        factory: ['App\Service\TowerFactory', 'createRedTower']

    app.mysql_lock:
        class: App\Service\Lock\MysqlLock

    app.postresql_lock:
        class: App\Service\Lock\PostgresqlLock

    app.lock:
        synthetic: true
        public: true
        tags:
            - {name: auto_alias, format: "app.%database_type%_lock" }

    app.x_smaller_four_listener:
        class: App\Service\Dispatcher\XSmallerFourListener


    App\Mail\TransportChain: ~


    MailerSmtpTransport:
        synthetic: true
        tags:
            - { name: 'app.mail_transport', alias: 'smtp' }

    MailerSendmailTransport:
        synthetic: true
        tags:
            - { name: 'app.mail_transport', alias: 'sendmail' }

#    App\Listener\ExceptionListener:
#        tags:
#            - { name: kernel.event_listener, event: kernel.exception }

#    App\Listener\MyListener:
#        tags:
#            - { name: kernel.event_listener, event: kernel.response, method: onResponse }